Resources:
  CDKMonoRepo2apiLambdaFunctionServiceRole90EA63CB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonDynamoDBFullAccess
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":logs:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :log-group:/aws/lambda/*
            Version: "2012-10-17"
          PolicyName: LambdaFunctionServiceRolePolicy
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaFunctionServiceRole/Resource
  CDKMonoRepo2apiLambdaFunctionServiceRoleDefaultPolicyB235A360:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2apiLambdaFunctionServiceRoleDefaultPolicyB235A360
      Roles:
        - Ref: CDKMonoRepo2apiLambdaFunctionServiceRole90EA63CB
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.
  CDKMonoRepo2apiLambdaFunction3A0E57C3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44S3BucketAE2A719E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44S3VersionKey9D9057F8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44S3VersionKey9D9057F8
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunctionServiceRole90EA63CB
          - Arn
      Runtime: nodejs12.x
      Description: CDK-MonoRepo2-lambda-gq-resolver
      Environment:
        Variables:
          REGION: ap-southeast-1
          ENV: dev
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: CDK-MonoRepo2-lambda-gq-resolver
      MemorySize: 256
      Timeout: 30
      TracingConfig:
        Mode: Active
    DependsOn:
      - CDKMonoRepo2apiLambdaFunctionServiceRoleDefaultPolicyB235A360
      - CDKMonoRepo2apiLambdaFunctionServiceRole90EA63CB
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.
  CDKMonoRepo2apiApiAccessLogGroupB7D431BC:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/ApiAccessLogGroup/Resource
  CDKMonoRepo2apiLambdaRestApiE70B2EB5:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: CDK-MonoRepo2-api
      EndpointConfiguration:
        Types:
          - EDGE
      Name: CDK-MonoRepo2-api
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Resource
  CDKMonoRepo2apiLambdaRestApiDeploymentD9B8DD04fe82899a5dc4e4099981e0639df80ac2:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      Description: Automatically created by the RestApi construct
    DependsOn:
      - CDKMonoRepo2apiLambdaRestApiauthnonegraphqlGET08898395
      - CDKMonoRepo2apiLambdaRestApiauthnonegraphqlOPTIONSDE899027
      - CDKMonoRepo2apiLambdaRestApiauthnonegraphqlPOST1E2B1637
      - CDKMonoRepo2apiLambdaRestApiauthnonegraphql975DCE31
      - CDKMonoRepo2apiLambdaRestApiauthnoneOPTIONS16AE1233
      - CDKMonoRepo2apiLambdaRestApiauthnoneDE6E12F4
      - CDKMonoRepo2apiLambdaRestApiauthrolegraphqlGET375A16AB
      - CDKMonoRepo2apiLambdaRestApiauthrolegraphqlOPTIONSB685D391
      - CDKMonoRepo2apiLambdaRestApiauthrolegraphqlPOST80F8C02C
      - CDKMonoRepo2apiLambdaRestApiauthrolegraphqlFC0724FC
      - CDKMonoRepo2apiLambdaRestApiauthroleOPTIONS9EB39BF8
      - CDKMonoRepo2apiLambdaRestApiauthroleC38DA4AC
      - CDKMonoRepo2apiLambdaRestApiauthusergraphqlGET9A28EA1E
      - CDKMonoRepo2apiLambdaRestApiauthusergraphqlOPTIONSF9AC01E0
      - CDKMonoRepo2apiLambdaRestApiauthusergraphqlPOST7F5BDDA0
      - CDKMonoRepo2apiLambdaRestApiauthusergraphqlF4A0D21A
      - CDKMonoRepo2apiLambdaRestApiauthuserOPTIONS01DDA5E1
      - CDKMonoRepo2apiLambdaRestApiauthuser7493C8D9
      - CDKMonoRepo2apiLambdaRestApiOPTIONS4A1DCBE6
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W45
            reason: ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource
  CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
            - CDKMonoRepo2apiApiAccessLogGroupB7D431BC
            - Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","user":"$context.identity.user","caller":"$context.identity.caller","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
      DeploymentId:
        Ref: CDKMonoRepo2apiLambdaRestApiDeploymentD9B8DD04fe82899a5dc4e4099981e0639df80ac2
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: /*
      StageName: dev
      TracingEnabled: true
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/DeploymentStage.dev/Resource
  CDKMonoRepo2apiLambdaRestApiOPTIONS4A1DCBE6:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaRestApiE70B2EB5
          - RootResourceId
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthuser7493C8D9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaRestApiE70B2EB5
          - RootResourceId
      PathPart: auth-user
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/Resource
  CDKMonoRepo2apiLambdaRestApiauthuserOPTIONS01DDA5E1:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthuser7493C8D9
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlF4A0D21A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthuser7493C8D9
      PathPart: graphql
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/Resource
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlOPTIONSF9AC01E0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthusergraphqlF4A0D21A
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlGETApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthusergraphql13DA2B8D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /GET/auth-user/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/GET/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-user.graphql
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlGETApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthusergraphql1430E383:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/GET/auth-user/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/GET/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-user.graphql
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlGET9A28EA1E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthusergraphqlF4A0D21A
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationScopes:
        - openid
        - email
        - phone
        - aws.cognito.signin.user.admin
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: CDKMonoRepo2apiCognitoAuthorizer4A252582
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/GET/Resource
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlPOSTApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthusergraphqlCAF1CAF4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /POST/auth-user/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/POST/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-user.graphql
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlPOSTApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthusergraphql4D912AE3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/POST/auth-user/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/POST/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-user.graphql
  CDKMonoRepo2apiLambdaRestApiauthusergraphqlPOST7F5BDDA0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthusergraphqlF4A0D21A
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationScopes:
        - openid
        - email
        - phone
        - aws.cognito.signin.user.admin
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: CDKMonoRepo2apiCognitoAuthorizer4A252582
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-user/graphql/POST/Resource
  CDKMonoRepo2apiLambdaRestApiauthroleC38DA4AC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaRestApiE70B2EB5
          - RootResourceId
      PathPart: auth-role
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/Resource
  CDKMonoRepo2apiLambdaRestApiauthroleOPTIONS9EB39BF8:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthroleC38DA4AC
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlFC0724FC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthroleC38DA4AC
      PathPart: graphql
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/Resource
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlOPTIONSB685D391:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthrolegraphqlFC0724FC
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlGETApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthrolegraphql2D5E4F6D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /GET/auth-role/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/GET/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-role.graphql
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlGETApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthrolegraphql45735608:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/GET/auth-role/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/GET/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-role.graphql
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlGET375A16AB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthrolegraphqlFC0724FC
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/GET/Resource
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlPOSTApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthrolegraphql2C930B3D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /POST/auth-role/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/POST/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-role.graphql
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlPOSTApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthrolegraphql902C3C61:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/POST/auth-role/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/POST/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-role.graphql
  CDKMonoRepo2apiLambdaRestApiauthrolegraphqlPOST80F8C02C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthrolegraphqlFC0724FC
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-role/graphql/POST/Resource
  CDKMonoRepo2apiLambdaRestApiauthnoneDE6E12F4:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaRestApiE70B2EB5
          - RootResourceId
      PathPart: auth-none
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/Resource
  CDKMonoRepo2apiLambdaRestApiauthnoneOPTIONS16AE1233:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthnoneDE6E12F4
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthnonegraphql975DCE31:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthnoneDE6E12F4
      PathPart: graphql
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/Resource
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlOPTIONSDE899027:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthnonegraphql975DCE31
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/OPTIONS/Resource
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlGETApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthnonegraphql4C0FCA58:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /GET/auth-none/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/GET/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-none.graphql
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlGETApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2GETauthnonegraphqlE6C1F9A8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/GET/auth-none/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/GET/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.GET..auth-none.graphql
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlGET08898395:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthnonegraphql975DCE31
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/GET/Resource
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlPOSTApiPermissionCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthnonegraphql51D83AF0:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /POST/auth-none/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/POST/ApiPermission.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-none.graphql
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlPOSTApiPermissionTestCDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2POSTauthnonegraphql7FD0E447:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaFunction3A0E57C3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - /test-invoke-stage/POST/auth-none/graphql
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/POST/ApiPermission.Test.CDKMonoRepo2CDKMonoRepo2apiLambdaRestApi3455ACE2.POST..auth-none.graphql
  CDKMonoRepo2apiLambdaRestApiauthnonegraphqlPOST1E2B1637:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: CDKMonoRepo2apiLambdaRestApiauthnonegraphql975DCE31
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CDKMonoRepo2apiLambdaFunction3A0E57C3
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/Default/auth-none/graphql/POST/Resource
  CDKMonoRepo2apiLambdaRestApiUsagePlanAFD14053:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
        - ApiId:
            Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
          Stage:
            Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
          Throttle: {}
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApi/UsagePlan/Resource
  CDKMonoRepo2apiLambdaRestApiCloudWatchRole1E69854B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":logs:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :*
            Version: "2012-10-17"
          PolicyName: LambdaRestApiCloudWatchRolePolicy
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApiCloudWatchRole/Resource
  CDKMonoRepo2apiLambdaRestApiAccountA54C6A9D:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - CDKMonoRepo2apiLambdaRestApiCloudWatchRole1E69854B
          - Arn
    DependsOn:
      - CDKMonoRepo2apiLambdaRestApiE70B2EB5
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/LambdaRestApiAccount
  CDKMonoRepo2apiCognitoUserPoolBCEBB48D:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      LambdaConfig:
        PostConfirmation:
          Fn::GetAtt:
            - CDKMonoRepo2lambdauserconfirmed1DA50857
            - Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
          TemporaryPasswordValidityDays: 2
      Schema:
        - Mutable: false
          Name: email
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: signUpAttributes
          StringAttributeConstraints:
            MaxLength: "2048"
            MinLength: "1"
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      UserPoolName: CDK-MonoRepo2-user-pool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/CognitoUserPool/Resource
  CDKMonoRepo2apiCognitoUserPoolCDKMonoRepo2client9C6AECED:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: CDKMonoRepo2apiCognitoUserPoolBCEBB48D
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - email
        - phone
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - http://localhost:3000/
      ClientName: CDK-MonoRepo2-client
      LogoutURLs:
        - http://localhost:3000/
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/CognitoUserPool/CDK-MonoRepo2-client/Resource
  CDKMonoRepo2apiCognitoUserPoolCognitoDomain08E841E3:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      UserPoolId:
        Ref: CDKMonoRepo2apiCognitoUserPoolBCEBB48D
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/CognitoUserPool/CognitoDomain/Resource
  CDKMonoRepo2apiCognitoUserPoolClient343F15E4:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: CDKMonoRepo2apiCognitoUserPoolBCEBB48D
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/CognitoUserPoolClient/Resource
  CDKMonoRepo2apiCognitoAuthorizer4A252582:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      RestApiId:
        Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      Name: cognito-authorizer
      ProviderARNs:
        - Fn::GetAtt:
            - CDKMonoRepo2apiCognitoUserPoolBCEBB48D
            - Arn
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/CognitoAuthorizer
  CDKMonoRepo2apiUserConfirmedInvokeApi5102B43F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /GET/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /POST/auth-role/graphql
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2apiUserConfirmedInvokeApi5102B43F
      Roles:
        - Ref: CDKMonoRepo2lambdauserconfirmedServiceRole61ACDF9A
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/UserConfirmedInvokeApi/Resource
  CDKMonoRepo2apiIdentityPoolAuthenticatedInvokeApi7CC819C5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /GET/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /POST/auth-role/graphql
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2apiIdentityPoolAuthenticatedInvokeApi7CC819C5
      Roles:
        - Ref: CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleA5D22ED2
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/IdentityPoolAuthenticatedInvokeApi/Resource
  CDKMonoRepo2apiIdentityPoolUnauthenticatedInvokeApi4A044A2B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /OPTIONS/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /GET/auth-role/graphql
          - Action: execute-api:Invoke
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
                  - /
                  - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
                  - /POST/auth-role/graphql
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2apiIdentityPoolUnauthenticatedInvokeApi4A044A2B
      Roles:
        - Ref: CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRole923A06B1
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-api/IdentityPoolUnauthenticatedInvokeApi/Resource
  CDKMonoRepo2IdentityPoolA2A90B6D:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: CDKMonoRepo2apiCognitoUserPoolCDKMonoRepo2client9C6AECED
          ProviderName:
            Fn::GetAtt:
              - CDKMonoRepo2apiCognitoUserPoolBCEBB48D
              - ProviderName
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/CDK-MonoRepo2-IdentityPool
  CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleA5D22ED2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: CDKMonoRepo2IdentityPoolA2A90B6D
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/AuthRole/CognitoDefaultAuthenticatedRole/Resource
  CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleDefaultPolicyFF44F665:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
              - cognito-identity:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleDefaultPolicyFF44F665
      Roles:
        - Ref: CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleA5D22ED2
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/AuthRole/CognitoDefaultAuthenticatedRole/DefaultPolicy/Resource
  CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRole923A06B1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: CDKMonoRepo2IdentityPoolA2A90B6D
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/UnauthRole/CognitoDefaultAuthenticatedRole/Resource
  CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRoleDefaultPolicyDE4EFB6C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
              - cognito-identity:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRoleDefaultPolicyDE4EFB6C
      Roles:
        - Ref: CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRole923A06B1
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/UnauthRole/CognitoDefaultAuthenticatedRole/DefaultPolicy/Resource
  CDKMonoRepo2IdentityPoolRoleAttachment45D16B30:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CDKMonoRepo2IdentityPoolA2A90B6D
      Roles:
        authenticated:
          Fn::GetAtt:
            - CDKMonoRepo2IdentityPoolAuthRoleCognitoDefaultAuthenticatedRoleA5D22ED2
            - Arn
        unauthenticated:
          Fn::GetAtt:
            - CDKMonoRepo2IdentityPoolUnauthRoleCognitoDefaultAuthenticatedRole923A06B1
            - Arn
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-IdentityPool/RoleAttachment
  CDKMonoRepo2lambdauserconfirmedServiceRole61ACDF9A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonCognitoPowerUser
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-lambda-user-confirmed/ServiceRole/Resource
  CDKMonoRepo2lambdauserconfirmed1DA50857:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676S3BucketF79F3ACB
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676S3VersionKey77BF02CF
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676S3VersionKey77BF02CF
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CDKMonoRepo2lambdauserconfirmedServiceRole61ACDF9A
          - Arn
      Runtime: nodejs12.x
      Description: CDK-MonoRepo2-lambda-user-confirmed
      Environment:
        Variables:
          SSM_BACKEND_CONFIG: /CDK-MonoRepo2/beconfig
      FunctionName: CDK-MonoRepo2-lambda-user-confirmed
      MemorySize: 256
      Timeout: 30
    DependsOn:
      - CDKMonoRepo2lambdauserconfirmedServiceRole61ACDF9A
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-lambda-user-confirmed/Resource
      aws:asset:path: /Users/sive/Documents/Training/serverless/cdk-monorepo-example/cdk-monorepo-example/packages/lambda-user-confirmed/dist
      aws:asset:property: Code
  CDKMonoRepo2lambdauserconfirmedPostConfirmationCognitoEEF42D29:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CDKMonoRepo2lambdauserconfirmed1DA50857
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CDKMonoRepo2apiCognitoUserPoolBCEBB48D
          - Arn
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-lambda-user-confirmed/PostConfirmationCognito
  CDKMonoRepo2awsgraphqlEndpointauthRole1AB69809:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value:
        Fn::Join:
          - ""
          - - https://
            - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
            - .execute-api.
            - Ref: AWS::Region
            - "."
            - Ref: AWS::URLSuffix
            - /
            - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
            - /auth-role/graphql
      Name: /CDK-MonoRepo2/beconfig/aws_graphqlEndpoint_authRole
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDK-MonoRepo2-aws_graphqlEndpoint_authRole/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.78.0,@aws-cdk/assets=1.75.0,@aws-cdk/aws-apigateway=1.75.0,@aws-cdk/aws-applicationautoscaling=1.75.0,@aws-cdk/aws-autoscaling-common=1.75.0,@aws-cdk/aws-certificatemanager=1.75.0,@aws-cdk/aws-cloudfront=1.75.0,@aws-cdk/aws-cloudfront-origins=1.75.0,@aws-cdk/aws-cloudwatch=1.75.0,@aws-cdk/aws-codeguruprofiler=1.75.0,@aws-cdk/aws-cognito=1.75.0,@aws-cdk/aws-dynamodb=1.75.0,@aws-cdk/aws-ec2=1.75.0,@aws-cdk/aws-elasticsearch=1.75.0,@aws-cdk/aws-events=1.75.0,@aws-cdk/aws-iam=1.75.0,@aws-cdk/aws-kinesis=1.75.0,@aws-cdk/aws-kinesisanalytics=1.75.0,@aws-cdk/aws-kms=1.75.0,@aws-cdk/aws-lambda=1.75.0,@aws-cdk/aws-lambda-event-sources=1.75.0,@aws-cdk/aws-logs=1.75.0,@aws-cdk/aws-s3=1.75.0,@aws-cdk/aws-s3-assets=1.75.0,@aws-cdk/aws-s3-notifications=1.75.0,@aws-cdk/aws-sagemaker=1.75.0,@aws-cdk/aws-sam=1.75.0,@aws-cdk/aws-secretsmanager=1.75.0,@aws-cdk/aws-sns=1.75.0,@aws-cdk/aws-sns-subscriptions=1.75.0,@aws-cdk/aws-sqs=1.75.0,@aws-cdk/aws-ssm=1.75.0,@aws-cdk/aws-stepfunctions=1.75.0,@aws-cdk/cloud-assembly-schema=1.75.0,@aws-cdk/core=1.75.0,@aws-cdk/custom-resources=1.75.0,@aws-cdk/cx-api=1.75.0,@aws-cdk/region-info=1.75.0,@aws-solutions-constructs/core=1.75.0,jsii-runtime=node.js/v14.14.0
    Metadata:
      aws:cdk:path: CDK-MonoRepo2/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  CDKMonoRepo2apiLambdaRestApiEndpointD9FD2954:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: CDKMonoRepo2apiLambdaRestApiE70B2EB5
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: CDKMonoRepo2apiLambdaRestApiDeploymentStagedev4C4ADBD9
          - /
  locallambdaconfig:
    Description: local-lambda-config
    Value:
      Fn::Join:
        - ""
        - - '{"REGION":"ap-southeast-1","ENV":"dev","COGNITO_USER_POOL_ID":"'
          - Ref: CDKMonoRepo2apiCognitoUserPoolBCEBB48D
          - '"}'
  clientconfig:
    Description: client-config
    Value:
      Fn::Join:
        - ""
        - - '{"aws_project_region":"ap-southeast-1","aws_cognito_identity_pool_id":"'
          - Ref: CDKMonoRepo2IdentityPoolA2A90B6D
          - '","aws_cognito_region":"ap-southeast-1","aws_user_pools_id":"ap-southeast-1_5zmaTsBgU","aws_user_pools_web_client_id":"3cegk98tmu5kqtl2jhg1jlcl0","aws_graphqlEndpoint_authUser":"http://localhost:3100/lambda-gq-resolver/graphql","aws_graphqlEndpoint_authRole":"http://localhost:3100/lambda-gq-resolver/graphql","aws_graphqlEndpoint_authNone":"http://localhost:3100/lambda-gq-resolver/graphql"}'
Parameters:
  AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44S3BucketAE2A719E:
    Type: String
    Description: S3 bucket for asset "5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44"
  AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44S3VersionKey9D9057F8:
    Type: String
    Description: S3 key for asset version "5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44"
  AssetParameters5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44ArtifactHashF3884A0C:
    Type: String
    Description: Artifact hash for asset "5ecb9d0d045150551dc058edeb29a6eed6f95e4b7ccc62f31fbe1867c2547e44"
  AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676S3BucketF79F3ACB:
    Type: String
    Description: S3 bucket for asset "8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676"
  AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676S3VersionKey77BF02CF:
    Type: String
    Description: S3 key for asset version "8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676"
  AssetParameters8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676ArtifactHashFEA05CA0:
    Type: String
    Description: Artifact hash for asset "8724fd3871444bd5d3f1c1795e92b575b9651d718b6072f89d7d81b1dc9a6676"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

